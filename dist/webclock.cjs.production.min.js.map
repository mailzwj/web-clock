{"version":3,"file":"webclock.cjs.production.min.js","sources":["../src/constants.ts","../src/index.ts","../src/utils.ts"],"sourcesContent":["export const defaultOption: IClock.IOption = {\n  theme: 'apple-dark',\n  width: 240,\n  height: 240,\n  dpi: 2\n};\n\nexport const themes: Record<string, IClock.ITheme> = {\n  'apple-dark': {\n    backgroundColor: 'rgba(0, 0, 0, 0.85)',\n    faceColor: '#fff',\n    hourScaleColor: 'rgba(0, 0, 0, 0.6)',\n    minuteScaleColor: 'rgba(0, 0, 0, 0.3)',\n    textColor: 'rgba(0, 0, 0, 0.6)',\n    hourPointerColor: 'rgba(0, 0, 0, 0.85)',\n    minutePointerColor: 'rgba(0, 0, 0, 0.85)',\n    milliPointerColor: 'rgba(242, 162, 60, 1)',\n    centerCircleColor: '#fff'\n  },\n  'apple-light': {\n    backgroundColor: '#fff',\n    faceColor: 'rgba(0, 0, 0, 1)',\n    hourScaleColor: 'rgba(255, 255, 255, 0.6)',\n    minuteScaleColor: 'rgba(255, 255, 255, 0.3)',\n    textColor: 'rgba(255, 255, 255, 0.6)',\n    hourPointerColor: 'rgba(255, 255, 255, 0.85)',\n    minutePointerColor: 'rgba(255, 255, 255, 0.85)',\n    milliPointerColor: 'rgba(242, 162, 60, 1)',\n    centerCircleColor: '#fff'\n  },\n  'mi': {\n    backgroundColor: 'rgba(238, 113, 46, 1)',\n    faceColor: '#fff',\n    hourScaleColor: 'rgba(238, 113, 46, 0.6)',\n    minuteScaleColor: 'rgba(238, 113, 46, 0.3)',\n    textColor: 'rgba(238, 113, 46, 1)',\n    hourPointerColor: 'rgba(238, 113, 46, 1)',\n    minutePointerColor: 'rgba(238, 113, 46, 1)',\n    milliPointerColor: 'rgba(242, 162, 60, 1)',\n    centerCircleColor: '#fff'\n  }\n};\n","import { defaultOption, themes } from \"./constants\";\nimport { initCanvas } from \"./utils\";\n\nconst draw = (canvas: HTMLCanvasElement, render: (ctx: CanvasRenderingContext2D) => void) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n  ctx.save();\n  ctx.beginPath();\n  render(ctx);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\nconst sceneInit = (canvas: HTMLCanvasElement, option: IClock.IOption) => {\n  const { width, height, dpi } = option;\n  // @ts-ignore\n  canvas.style.width = `${width}px`;\n  // @ts-ignore\n  canvas.style.width = `${height}px`;\n  // @ts-ignore\n  canvas.width = width * dpi;\n  // @ts-ignore\n  canvas.height = height * dpi;\n};\n\nconst clearScene = (canvas: HTMLCanvasElement) => {\n  const ctx = canvas.getContext('2d');\n  ctx?.clearRect(0, 0, canvas.width, canvas.height);\n};\n\nconst drawBg = (canvas: HTMLCanvasElement, color: IClock.IColor) => {\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = color;\n    // @ts-ignore\n    ctx.roundRect(0, 0, canvas.width, canvas.height, canvas.width * 20 / 240);\n  });\n};\n\nconst drawFace = (canvas: HTMLCanvasElement, color: string, center: IClock.ICenter) => {\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = color;\n    ctx.arc(center.x, center.y, center.radius, 0, 2 * Math.PI);\n  });\n};\n\nconst drawScale = (canvas: HTMLCanvasElement, cfg: Record<string, any>) => {\n  // const ctx = canvas.getContext('2d');\n  const { hourAngle, minuteAngle, center, hourScaleColor: mainColor, minuteScaleColor: subColor } = cfg;\n  // Draw hour scale\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = mainColor;\n    ctx.translate(center.x, center.y);\n    for (let h = 0; h < 12; h++) {\n      // @ts-ignore\n      ctx.roundRect(-2 * cfg.dpi, -center.radius + 2 * cfg.dpi, 4 * cfg.dpi, center.radius * 0.12, 2 * cfg.dpi);\n      ctx.rotate(hourAngle);\n    }\n  });\n  // Draw minute scale\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = subColor;\n    ctx.translate(center.x, center.y);\n    for (let m = 0; m < 60; m++) {\n      if (m % 5 > 0) {\n        // @ts-ignore\n        ctx.roundRect(-cfg.dpi, -center.radius + 2 * cfg.dpi, 2 * cfg.dpi, center.radius * 0.09, cfg.dpi);\n      }\n      ctx.rotate(minuteAngle);\n    }\n  });\n};\n\nconst drawNumber = (canvas: HTMLCanvasElement, cfg: Record<string, any>) => {\n  const { hourAngle, textColor, center } = cfg;\n  const textRadius = center.radius * 0.75;\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = textColor;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.font = `bold ${center.radius * 0.2}px sans-serif`;\n    ctx.translate(center.x, center.y);\n    for (let h = 0; h < 12; h++) {\n      // @ts-ignore\n      ctx.fillText(h === 0 ? 12: h, Math.sin(h * hourAngle) * textRadius, -Math.cos(h * hourAngle) * textRadius);\n    }\n  });\n};\n\nconst renderHour = (canvas: HTMLCanvasElement, num: number, cfg: Record<string, any>) => {\n  const { hourAngle, center } = cfg;\n  const hAngle = num * hourAngle / 3600000;\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = cfg.hourPointerColor;\n    ctx.translate(center.x, center.y);\n    ctx.arc(0, 0, 6 * cfg.dpi, 0, 2 * Math.PI);\n    ctx.rotate(hAngle);\n    // @ts-ignore\n    ctx.roundRect(-2 * cfg.dpi, -center.radius * 0.15, 4 * cfg.dpi, center.radius * 0.15, 4 * cfg.dpi);\n    // @ts-ignore\n    ctx.roundRect(-5 * cfg.dpi, -center.radius * 0.5, 10 * cfg.dpi, center.radius * 0.37, 10 * cfg.dpi);\n  });\n};\n\nconst renderMinute = (canvas: HTMLCanvasElement, num: number, cfg: Record<string, any>) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n  const { minuteAngle, center } = cfg;\n  const mAngle = num * minuteAngle / 60000;\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = cfg.hourPointerColor;\n    ctx.translate(center.x, center.y);\n    ctx.arc(0, 0, 6 * cfg.dpi, 0, 2 * Math.PI);\n    ctx.rotate(mAngle);\n    // @ts-ignore\n    ctx.roundRect(-2 * cfg.dpi, -center.radius * 0.15, 4 * cfg.dpi, center.radius * 0.15, 4 * cfg.dpi);\n    // @ts-ignore\n    ctx.roundRect(-4 * cfg.dpi, -center.radius * 0.8, 8 * cfg.dpi, center.radius * 0.67, 8 * cfg.dpi);\n  });\n};\n\nconst renderMillSecond = (canvas: HTMLCanvasElement, num: number, cfg: Record<string, any>) => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n  const { milliAngle, center } = cfg;\n  const smAngle = num * milliAngle;\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = cfg.milliPointerColor;\n    ctx.translate(center.x, center.y);\n    ctx.arc(0, 0, 6 * cfg.dpi, 0, 2 * Math.PI);\n    ctx.rotate(smAngle);\n    // @ts-ignore\n    ctx.roundRect(-2 * cfg.dpi, -center.radius * 0.88, 4 * cfg.dpi, center.radius, 4 * cfg.dpi);\n  });\n\n  draw(canvas, (ctx: CanvasRenderingContext2D) => {\n    ctx.fillStyle = cfg.centerCircleColor;\n    ctx.translate(center.x, center.y);\n    ctx.arc(0, 0, 3 * cfg.dpi, 0, 2 * Math.PI);\n  });\n};\n\nexport default class WebClock {\n  cvs: HTMLCanvasElement;\n\n  option: IClock.IOption;\n\n  afId: any;\n\n  constructor(canvas: string | HTMLCanvasElement, option: IClock.IOption = {}) {\n    this.cvs = initCanvas(canvas) as HTMLCanvasElement;\n\n    this.option = { ...defaultOption, ...option };\n\n    this.draw();\n  }\n\n  draw() {\n    const circle = 2 * Math.PI;\n    const cfg: Record<string, any> = {\n      ...this.option,\n      ...themes[this.option.theme || 'apple-dark'],\n      ...(this.option.userTheme || {}),\n      hourAngle: circle / 12,\n      minuteAngle: circle / 60,\n      secondAngle: circle / 3600,\n      milliAngle: circle / 60000\n    };\n    const d = new Date();\n    const hour = d.getHours();\n    const minute = d.getMinutes();\n    const second = d.getSeconds();\n    const millisecond = d.getMilliseconds();\n    sceneInit(this.cvs, this.option);\n    cfg.center = {\n      x: this.cvs.width / 2,\n      y: this.cvs.height / 2,\n      radius: Math.min(this.cvs.width, this.cvs.height) * 0.45\n    };\n    clearScene(this.cvs);\n    drawBg(this.cvs, cfg.backgroundColor);\n    drawFace(this.cvs, cfg.faceColor, cfg.center);\n    drawScale(this.cvs, cfg);\n    if (cfg.showNumber) {\n      drawNumber(this.cvs, cfg);\n    }\n    renderHour(this.cvs, hour * (3600 * 1000) + minute * 60 * 1000 + second * 1000 + millisecond, cfg);\n    renderMinute(this.cvs, minute * 60 * 1000 + second * 1000 + millisecond, cfg);\n    renderMillSecond(this.cvs, second * 1000 + millisecond, cfg);\n\n    this.afId = requestAnimationFrame(() => {\n      this.draw();\n    });\n  }\n\n  destroy() {\n    if (this.afId) {\n      cancelAnimationFrame(this.afId);\n    }\n    this.cvs.parentNode?.removeChild(this.cvs);\n  }\n}\n","export const initCanvas = (canvas?: string | HTMLCanvasElement) => {\n  if (!canvas) {\n    const cvs = document.createElement('canvas');\n    document.body.appendChild(cvs);\n    return cvs;\n  }\n  if (typeof canvas === 'string') {\n    return document.querySelector(`#${canvas}`);\n  }\n  if (canvas instanceof HTMLCanvasElement) {\n    return canvas;\n  }\n  throw '参数错误';\n};\n"],"names":["defaultOption","theme","width","height","dpi","themes","apple-dark","backgroundColor","faceColor","hourScaleColor","minuteScaleColor","textColor","hourPointerColor","minutePointerColor","milliPointerColor","centerCircleColor","apple-light","mi","draw","canvas","render","ctx","getContext","save","beginPath","closePath","fill","restore","WebClock","option","this","cvs","document","createElement","body","appendChild","querySelector","HTMLCanvasElement","initCanvas","_extends","_proto","prototype","circle","Math","PI","cfg","userTheme","hourAngle","minuteAngle","secondAngle","milliAngle","d","Date","hour","getHours","minute","getMinutes","second","getSeconds","millisecond","getMilliseconds","style","center","x","y","radius","min","clearRect","clearScene","color","fillStyle","roundRect","drawBg","arc","drawFace","mainColor","subColor","translate","h","rotate","m","drawScale","showNumber","textRadius","textAlign","textBaseline","font","fillText","sin","cos","drawNumber","num","hAngle","renderHour","mAngle","renderMinute","smAngle","renderMillSecond","afId","requestAnimationFrame","_this","destroy","cancelAnimationFrame","_this$cvs$parentNode","parentNode","removeChild"],"mappings":"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"}